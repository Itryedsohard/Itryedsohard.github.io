<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>面向切片编程</title>
    <link href="/2023/05/19/%E9%9D%A2%E5%90%91%E5%88%87%E7%89%87%E7%BC%96%E7%A8%8B/"/>
    <url>/2023/05/19/%E9%9D%A2%E5%90%91%E5%88%87%E7%89%87%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//回调函数是高阶函数的一种</span><br><span class="hljs-comment">//高阶函数 1) 如果函数的参数是一个函数 或者 2) 如果一个函数返了一个函数(返回函数就是高阶函数)</span><br><span class="hljs-comment">//常见的高阶函数应用</span><br><br><span class="hljs-comment">//举例</span><br><span class="hljs-comment">//说话是核心功能</span><br><span class="hljs-comment">//我们希望在核心功能中扩展新的功能且不影响函数原来的功能</span><br><br><br><span class="hljs-comment">//错误示例</span><br><span class="hljs-comment">// function say() &#123;</span><br><span class="hljs-comment">//     // console.log(&#x27;说话前过脑&#x27;);改变了原来的方法，复用性差</span><br><span class="hljs-comment">//     console.log(&#x27;说话&#x27;);</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// say()</span><br><br><br><br><span class="hljs-comment">//AOP面向切片编程，对函数进行扩展（函数劫持）</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">who</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(who+<span class="hljs-string">&#x27;说话&#x27;</span>);<br>&#125;<br><br><br><span class="hljs-title class_">Function</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">beforSay</span>=<span class="hljs-keyword">function</span> (<span class="hljs-params">fn</span>) &#123;<br>    <span class="hljs-comment">//剩余运算符</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args</span>)=&gt;</span>&#123;<br>        <span class="hljs-title function_">fn</span>(...args)<br>        <span class="hljs-title function_">this</span>(...args)<span class="hljs-comment">//扩展运算符</span><br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">NewFun</span>=say.<span class="hljs-title function_">beforSay</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">who</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(who+<span class="hljs-string">&#x27;说话前过脑&#x27;</span>);<br>&#125;)<br><span class="hljs-title class_">NewFun</span>(<span class="hljs-string">&#x27;我&#x27;</span>)<br><br><span class="hljs-comment">// 输出结果：</span><br><span class="hljs-comment">// 我说话前过脑</span><br><span class="hljs-comment">// 我说话</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法</title>
    <link href="/2023/05/19/%E7%AE%97%E6%B3%95/"/>
    <url>/2023/05/19/%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>welcome hexo</title>
    <link href="/2022/07/10/hello-world/"/>
    <url>/2022/07/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>777777<br>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
